[General]
network = OPSMessengerNetwork



#simulation control parameters
sim-time-limit = 86400s # 604800s # 7 days
repeat = 12


# RNG initialization
num-rngs = 6
seed-0-mt = ${801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812 ! repetition} # 1000  # left specifically unused for "unknown" RNG uses
seed-1-mt = ${813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824 ! repetition} # 2000  # application
seed-2-mt = ${825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836 ! repetition} # 3000  # user behaviour model RNG
seed-3-mt = ${921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932 ! repetition} # 4000  # forwarding RNG
seed-4-mt = ${933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944 ! repetition} # 5000  # link layer RNG 472
seed-5-mt = ${945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956 ! repetition} # 6000  # mobility RNG


# results location
result-dir = results/
output-vector-file = "${resultdir}/${datetime}_${inifile}-${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${datetime}_${inifile}-${configname}-${runnumber}.sca"



# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true




# network parameters
**.numNodes = 200 # 500



# application layer (messenger)
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 12 # 10000
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KRRSLayer"
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.usedRNG = 3
**.forwarding.broadcastRRS = false



# wireless interface parameters
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 1000000bps # 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 10byte # 16byte # BT header
**.link.usedRNG = 4

**.link.beaconTime = uniform(0s,10240ms,4)
**.link.timingDelay = 10ms
**.link.advertisementInterval = 10240ms



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 200 # 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5

