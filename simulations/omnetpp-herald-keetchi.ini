[General]
network = OPSHeraldNetwork



#simulation control parameters
sim-time-limit = 86400s # 604800s # 7 days
repeat = 6



# RNG initialization
num-rngs = 6
seed-0-mt = ${932, 1000, 832, 32, 3229, 8327 ! repetition} # 1000  # left specifically unused for "unknown" RNG uses
seed-1-mt = ${372, 2000, 8127, 81, 8174, 9482 ! repetition} # 2000  # application
seed-2-mt = ${493, 3000, 9182, 92, 9212, 1728 ! repetition} # 3000  # user behaviour model RNG
seed-3-mt = ${172, 4000, 732, 72, 7264, 3847 ! repetition} # 4000  # forwarding RNG
seed-4-mt = ${483, 5000, 1726, 16, 1694, 9284 ! repetition} # 5000  # link layer RNG
seed-5-mt = ${985, 6000, 4627, 47, 4782, 8472 ! repetition} # 6000  # mobility RNG


# results location
result-dir = results/
output-vector-file = "${resultdir}/${datetime}_${inifile}-${configname}-${runnumber}.vec"
output-scalar-file = "${resultdir}/${datetime}_${inifile}-${configname}-${runnumber}.sca"



# statistic collection
**.vector-recording = true
**.scalar-recording = true
**.statistic-recording = true




# network parameters
**.numNodes = 200 # 500



# application layer (herald)
**.app.dataGenerationInterval = 900s # every 1/4 of an hour - we simulate for 7 days
**.app.dataSizeInBytes = 12 # 10000
**.app.popularityAssignmentPercentage = 25
**.app.usedRNG = 1



# forwarding layer parameters
**.forwardingLayer = "KKeetchiLayer"
**.forwarding.agingInterval = 300s
**.forwarding.maximumCacheSize = 5000000byte # 5 MB cache
**.forwarding.neighbourhoodChangeSignificanceThreshold = 0.25
**.forwarding.coolOffDuration = 300s
**.forwarding.learningConst = 0.5
**.forwarding.backoffTimerIncrementFactor = 1.5
**.forwarding.usedRNG = 3



# wireless interface parameters
**.link.wirelessRange = 30m
**.link.neighbourScanInterval = 1s
**.link.bandwidthBitRate = 1000000bps # 100000bps # 100 Kbps
**.link.wirelessHeaderSize = 10byte # 16byte # BT header
**.link.usedRNG = 4

**.link.beaconTime = uniform(0s,2520ms,4)
**.link.timingDelay = 10ms
**.link.advertisementInterval = 2520ms



# INET mobility parameters (SWIM)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1500m
**.constraintAreaMaxY = 1500m
**.constraintAreaMaxZ = 0m
**.updateInterval = 1s # test with 0s too, and let getCurrentPosition update the display string from a test module
**.mobility.initFromDisplayString = false
**.mobilityType = "SWIMMobility"
**.mobility.noOfLocations = 200
**.mobility.Hosts = 200 # 500
**.mobility.popularityDecisionThreshold = 7
**.mobility.returnHomePercentage = 15
**.mobility.neighbourLocationLimit = 200m
**.mobility.speed = 1.5mps
**.mobility.radius = 2m
**.mobility.alpha = 0.5
**.mobility.waitTime = uniform(1200s, 28800s, 5) # 20 mins - 8 hrs
**.mobility.usedRNG = 5

